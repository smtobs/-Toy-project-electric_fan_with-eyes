# uboot_env.hush - Init script for u-boot variables
# To use this script, use mkimage 
# This script is used to init u-boot variables 
# and to verify if the rootfs boots after an update. 
mmc dev 0
fatload mmc 0:1 ${kernel_addr_r} zImage

rootfs_partition1="/dev/mmcblk0p3"
rootfs_partition2="/dev/mmcblk0p4"

# Initialize boot_fail_count if not already set
if test -z "${boot_fail_count}"; then
    setenv boot_fail_count 0
fi

# Increment boot_fail_count
setexpr boot_fail_count ${boot_fail_count} + 1
saveenv

if test "${boot_fail_count}" = "3"; then
	#Change Partition
	if test "${rootfs_partition}" = "${rootfs_partition2}"; then
    		setenv rootfs_partition ${rootfs_partition1}
	elif test "${rootfs_partition}" = "${rootfs_partition1}"; then
    		setenv rootfs_partition ${rootfs_partition2}
	else
    		setenv rootfs_partition ${rootfs_partition1}
	fi
	setenv boot_fail_count 0
else
	if test "${rootfs_partition}" != "${rootfs_partition2}"; then
    		setenv rootfs_partition ${rootfs_partition1}
	fi
fi

setenv bootargs root=${rootfs_partition} rootfstype=ext4 rw rootwait console=ttyAMA0,115200 earlyprintk

saveenv
bootz ${kernel_addr_r} - ${fdt_addr}
